{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/services/todoapi.service.ts","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"flex-column align-content-center m-lg-5 text-center bg-info-subtle p-lg-5 rounded-3\">\n  <div>\n    <h1>TODOIT</h1>\n    <h3>Welcome to a new and easy-to-use todo application!</h3>\n  </div>\n  <div class=\"d-flex flex-column justify-content-center align-items-center gap-1\" *ngIf=\"authService.notLoggedIn()\">\n    <h5>Dont have an account? <span class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register here!</span></h5>\n    <h5>Already have an account? <span class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</span></h5>\n  </div>\n  <div class=\"d-flex flex-column justify-content-center align-items-center gap-1\" *ngIf=\"authService.loggedIn()\">\n    <h5>Start using the awesome TODOIT!</h5>\n    <h5>Start by going to your dashboard.</h5>\n    <span class=\"btn btn-primary\" [routerLink]=\"['/dashboard']\">To The Dashboard</span>\n  </div>\n</div>\n\n<div class=\"d-flex flex-column justify-content-center align-items-center gap-1\">\n  <h1>Why use todo?</h1>\n  <div class=\"d-flex gap-5 align-items-center justify-content-center h5 card-wrapper\">\n    <div class=\"bg-info-subtle rounded-3 p-3 infocard\">\n      <h3>Fast todo tracking</h3>\n      <p>With the application you can track your to-do's fast without taking much time.</p>\n    </div>\n    <div class=\"bg-info-subtle rounded-3 p-3 infocard\">\n      <h3>Easy to use</h3>\n      <p>Todo app is easy to learn and use.</p>\n    </div>\n    <div class=\"bg-info-subtle rounded-3  p-3 infocard\">\n      <h3>Improves productivity</h3>\n      <p>By using Todo app, you can improve your productivity by 200%</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public authService: AuthService, private router: Router, private flashMessagesService: FlashMessagesService) { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">\n    {{user.name}}\n  </h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{user.username}}</li>\n    <li class=\"list-group-item\">Email: {{user.email}}</li>\n    <li class=\"list-group-item text-success\">Amount of done todos: {{doneTodos}}</li>\n    <li class=\"list-group-item text-danger\">Amount of not done todos: {{notDoneTodos}}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport {TodoapiService} from \"../../services/todoapi.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n  todoList: Array<any>;\n  doneTodos: number;\n  notDoneTodos: number;\n\n\n  constructor(private authService: AuthService, private todoService: TodoapiService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(profile =>  {\n      this.user = profile.user;\n    },\n      error => {\n        console.log(error);\n        return false;\n      });\n    this.todoService.getTodos(JSON.parse(localStorage.getItem(\"user\")).id).subscribe(todos =>  {\n        this.todoList = todos\n        this.doneTodos = this.todoList.filter((todo) => todo.done === true).length;\n        this.notDoneTodos = this.todoList.filter((todo) => todo.done === false).length;\n      },\n      error => {\n        console.log(error);\n        return false;\n      });\n  }\n\n}\n","<div *ngIf=\"user\" class=\"dashboard\">\n  <h2>Welcome to your dashboard {{user.name}}!</h2>\n  <div class=\"dashboard__wrapper\">\n    <form (submit)=\"onTodoCreate()\">\n      <div class=\"form-group\">\n        <label for=\"todo\">Create a new TODO</label>\n        <input type=\"text\" class=\"form-control\" id=\"todo\" placeholder=\"Enter a todo\" [(ngModel)]=\"todo\" name=\"todo\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Create todo</button>\n    </form>\n  </div>\n  <h2 *ngIf=\"todoList?.length === 0\">No todos yet, add some!</h2>\n  <h2 *ngIf=\"todoList?.length != 0\">Todos:</h2>\n  <div *ngFor=\"let todo of todoList\" class=\"card__wrapper\">\n    <div class=\"todo__card bg-info-subtle\">\n      <h3>\n        {{todo.todo}}\n      </h3>\n      <h5>\n        <span class=\"text-decoration-underline {{todo.done ? 'text-success' : 'text-danger'}}\">{{todo.done ? \"Done\" : \"Not done\"}}</span>\n        <div class=\"todo__buttons\">\n          <div>\n            <form *ngIf=\"!todo.done\" (submit)=\"onTodoUpdate(todo)\">\n              <button class=\"btn btn-primary\" id=\"done\" type=\"submit\">Set as done</button>\n            </form>\n            <form *ngIf=\"todo.done\" (submit)=\"onTodoUpdate(todo)\">\n              <button class=\"btn btn-primary\" id=\"undoDone\" type=\"submit\">Undo Done</button>\n            </form>\n          </div>\n          <div>\n            <form *ngIf=\"todo\" (submit)=\"removeTodo(todo)\">\n              <button class=\"btn btn-danger\" id=\"remove\" type=\"submit\">Remove</button>\n            </form>\n          </div>\n        </div>\n      </h5>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {TodoapiService} from \"../../services/todoapi.service\";\nimport {Router} from \"@angular/router\";\nimport {FlashMessagesService} from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.scss']\n})\nexport class DashboardComponent implements OnInit {\n  todoList: Array<any>;\n  todo: String;\n  user: Object;\n\n  constructor(private authService: AuthService, private todoService: TodoapiService, private router: Router, private flashMessagesService: FlashMessagesService) { }\n\n\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe(profile =>  {\n        this.user = profile.user;\n      },\n      error => {\n        console.log(error);\n        return false;\n      });\n\n    this.todoService.getTodos(JSON.parse(localStorage.getItem(\"user\")).id).subscribe(todos =>  {\n        this.todoList = todos\n      },\n      error => {\n        console.log(error);\n        return false;\n      });\n  }\n\n  onTodoCreate() {\n    const owner = JSON.parse(localStorage.getItem(\"user\")).id\n    const todo = {\n      owner: owner,\n      todo: this.todo,\n      done: false\n    }\n    this.todoService.postTodo(todo).subscribe(data => {\n      if(data['success']) {\n        this.flashMessagesService.show(\"Todo posted\", {cssClass: \"alert-success\", timeout: 3000})\n        this.todoService.getTodos(JSON.parse(localStorage.getItem(\"user\")).id).subscribe(todos =>  {\n            this.todoList = todos\n          },\n          error => {\n            console.log(error);\n            return false;\n          });\n      } else {\n        this.flashMessagesService.show(data.msg, {cssClass: \"alert-danger\", timeout: 3000})\n      }\n    })\n  }\n\n  onTodoUpdate(todo) {\n    const newDoneValue = !todo.done\n\n    this.todoService.updateTodo(newDoneValue, todo._id).subscribe(data => {\n      if(data['success']) {\n        this.flashMessagesService.show(\"Todo updated\", {cssClass: \"alert-success\", timeout: 3000})\n        this.todoService.getTodos(JSON.parse(localStorage.getItem(\"user\")).id).subscribe(todos =>  {\n            this.todoList = todos\n          },\n          error => {\n            console.log(error);\n            return false;\n          });\n      } else {\n        this.flashMessagesService.show(data.msg, {cssClass: \"alert-danger\", timeout: 3000})\n      }\n    })\n  }\n\n  removeTodo(todo) {\n    this.todoService.removeTodo(todo._id).subscribe(data => {\n      if(data['success']) {\n        this.flashMessagesService.show(\"Todo removed\", {cssClass: \"alert-success\", timeout: 3000})\n        this.todoService.getTodos(JSON.parse(localStorage.getItem(\"user\")).id).subscribe(todos =>  {\n            this.todoList = todos\n          },\n          error => {\n            console.log(error);\n            return false;\n          });\n      } else {\n        this.flashMessagesService.show(data.msg, {cssClass: \"alert-danger\", timeout: 3000})\n      }\n    })\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","\n<div class=\"container\">\n  <app-navbar></app-navbar>\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport {Router, CanActivate, } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n\r\n    } else {\r\n      this.router.navigate([\"/login\"]);\r\n      return false\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\"\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  constructor(private authService: AuthService, private router: Router, private flashMessagesService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password,\n    }\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data['success']) {\n        this.flashMessagesService.show(\"You are now logged in\", {cssClass: \"alert-success\", timeout: 3000})\n        this.authService.storeUserData(data.token, data.user)\n        this.router.navigate(['/'])\n      } else {\n        this.flashMessagesService.show(data.msg, {cssClass: \"alert-danger\", timeout: 3000})\n        this.router.navigate(['/login'])\n      }\n    })\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>\n","import { Injectable } from '@angular/core';\nimport {map} from \"rxjs/operators\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  })\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoapiService {\n  authToken: any;\n  constructor(private http: HttpClient) {}\n  getTodos(userId) {\n    return this.http.get(\"http://localhost:3000/todos/\"+userId, httpOptions).pipe(map((res: any) => res));\n  }\n\n  loadToken() {\n    const token = localStorage.getItem(\"id_token\");\n    this.authToken = token;\n  }\n  updateTodo(todo, id) {\n    this.loadToken()\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.authToken\n      })\n    }\n    const postUrl = \"http://localhost:3000/todos/\" + id\n    return this.http.post(postUrl, {done: todo}, httpOptions).pipe(map((res: any) => res));\n  }\n\n  postTodo(todo) {\n    this.loadToken()\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.authToken\n      })\n    }\n    const postUrl = \"http://localhost:3000/todos/create/\" + JSON.parse(localStorage.getItem(\"user\")).id\n    return this.http.post(postUrl, todo, httpOptions).pipe(map((res: any) => res));\n  }\n\n\n  removeTodo(_id) {\n    this.loadToken()\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.authToken\n      })\n    }\n    const postUrl = \"http://localhost:3000/todos/\" + _id\n    return this.http.delete(postUrl, httpOptions).pipe(map((res: any) => res));\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from \"../../services/validate.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(private validateService: ValidateService, private flashMessagesService: FlashMessagesService, private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n    // Required fields\n    if(!this.validateService.validateRegister(user)) {\n      this.flashMessagesService.show(\"Please fill in all fields\", {cssClass: \"alert-danger\", timeout: 3000})\n      return false;\n    }\n    if(!this.validateService.validateEmail(user.email)) {\n      this.flashMessagesService.show(\"Please use a valid email\", {cssClass: \"alert-danger\", timeout: 3000})\n      return false;\n    }\n\n    // Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if(data['success']) {\n        this.flashMessagesService.show(\"You are now registered\", {cssClass: \"alert-success\", timeout: 3000})\n        this.router.navigate(['/login'])\n      } else {\n        this.flashMessagesService.show(\"Something went wrong\", {cssClass: \"alert-danger\", timeout: 3000})\n        this.router.navigate(['/register'])\n      }\n    })\n  }\n}\n","<h2 class=\"page-header\">Register</h2>\n<form (submit)=\"onRegisterSubmit()\">\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Username</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ValidateService } from \"./services/validate.service\";\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"./services/auth.service\";\nimport { AuthGuard } from \"./guards/auth.guard\";\n\n\n\nconst appRoutes: Routes = [\n  {path: \"\", component: HomeComponent},\n  {path: \"register\", component: RegisterComponent},\n  {path: \"login\", component: LoginComponent},\n  {path: \"dashboard\", component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: \"profile\", component: ProfileComponent, canActivate: [AuthGuard] },\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule\n\n  ],\n  providers: [ValidateService, FlashMessagesService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (!user.name || !user.email || !user.username || !user.password) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    return re.test(email)\n  }\n}\n","<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top navbar-default\">\n  <a class=\"navbar-brand mx-2\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/']\">TODOIT</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse d-flex justify-content-between mx-5\" id=\"navbar\">\n    <ul class=\"navbar-nav mr-auto navbar-left d-flex gap-5\">\n      <li  class=\"nav-item\">\n        <a [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"nav-link\" [routerLink]=\"['/']\">Home</a>\n      </li>\n\n    </ul>\n    <ul class=\"navbar-nav mr-auto navbar-left d-flex gap-5\">\n      <li  class=\"nav-item \">\n        <a [routerLinkActive]=\"['active']\" class=\"nav-link\" [routerLink]=\"['/dashboard']\" *ngIf=\"authService.loggedIn()\">Dashboard</a>\n      </li>\n      <li  class=\"nav-item \">\n        <a [routerLinkActive]=\"['active']\" class=\"nav-link\" [routerLink]=\"['/profile']\" *ngIf=\"authService.loggedIn()\">Profile</a>\n      </li>\n      <li  class=\"nav-item \">\n        <a [routerLinkActive]=\"['active']\" class=\"nav-link\" [routerLink]=\"['/login']\" *ngIf=\"authService.notLoggedIn()\">Login</a>\n      </li>\n      <li  class=\"nav-item \">\n        <a [routerLinkActive]=\"['active']\" class=\"nav-link\" [routerLink]=\"['/register']\" *ngIf=\"authService.notLoggedIn()\">Register</a>\n      </li>\n      <li  class=\"nav-item \">\n        <a class=\"nav-link\" href=\"\" (click)=\"onLogoutClick()\" *ngIf=\"authService.loggedIn()\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\"\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public authService: AuthService, private router: Router, private flashMessagesService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessagesService.show(\"You have logged out\", { cssClass: \"alert-success\",  timeout: 3000 });\n    this.router.navigate(['/login'])\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nimport { map } from 'rxjs/operators';\n\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  })\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    return this.http.post(\"http://localhost:3000/users/register\", user, httpOptions).pipe(map((res: any) => res));\n  }\n  authenticateUser(user) {\n    return this.http.post(\"http://localhost:3000/users/authenticate\", user, httpOptions).pipe(map((res: any) => res));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem(\"id_token\", token);\n    localStorage.setItem('user',JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  getProfile() {\n    this.loadToken()\n    let headers = new HttpHeaders();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": this.authToken\n      })\n    }\n    return this.http.get(\"http://localhost:3000/users/profile\", httpOptions).pipe(map((res: any) => res));\n  }\n\n  loadToken() {\n    const token = localStorage.getItem(\"id_token\");\n    this.authToken = token;\n  }\n\n\n  loggedIn() {\n    const token: any = localStorage.getItem(\"id_token\");\n    return token;\n  }\n\n  notLoggedIn() {\n    const token: any = localStorage.getItem(\"id_token\");\n    return !token;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}